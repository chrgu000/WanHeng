<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">  
		 <bean id="toolSpring" class="com.dq.util.ToolSpring"></bean>
	<!-- 扫描注解 需去除controller，如果不去除会影响事务管理的。   -->
	 <context:component-scan base-package="com">
 	      <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	 </context:component-scan>
	 
	 <tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
			</list>
		</property>
	</bean>
	<!-- dbcp数据源连接池 -->
	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="initialSize" value="10" />
		<property name="maxIdle" value="100" />
		<property name="minIdle" value="10" />
		<property name="maxActive" value="100" />
		<property name="maxWait" value="100" />
		<property name="validationQuery" value="SELECT 1"></property>
		<property name="testWhileIdle" value="true"></property>
		<property name="testOnBorrow" value="true"></property>
		<property name="timeBetweenEvictionRunsMillis" value="60000"></property>
		<property name="numTestsPerEvictionRun" value="50"></property>
		<property name="minEvictableIdleTimeMillis" value="120000"></property>
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="180" />
	</bean>
 

	<!-- 配置mybatis的sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
<!--		 自动扫描mappers.xml文件 -->
		<property name="mapperLocations" value="classpath:com/dq/dao/*.xml"></property>
<!--		 mybatis配置文件 -->
		<property name="configLocation" value="classpath:com/dq/config/mybatis-config.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.dq.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置事务通知属性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 定义事务传播属性 -->
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="upd*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="new*" propagation="REQUIRED" />
			<tx:method name="set*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="change*" propagation="REQUIRED" />
			<tx:method name="check*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="search*" propagation="REQUIRED" read-only="true" />
			<tx:method name="show*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="load*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置事务切面 -->
	<aop:config>
		<aop:pointcut id="serviceOperation" expression="execution(* com.dq.serviceImpl.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
	</aop:config>

	<!-- 上传文件时需要做的配置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 文件大小 -->
		<property name="maxUploadSize" value="5000000" />
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 上传保存位置 -->
<!--		<property name="uploadTempDir" value="/upload/" />-->
		<!-- 最大内存 -->
		<property name="maxInMemorySize" value="10240" />
	</bean>
	<!-- 支持spring3.0新的mvc注解 -->
	<mvc:annotation-driven />
	<!-- 使用注解的包，包括子集 -->
	<!-- 扫描注解 需去除controller，如果不去除会影响事务管理的。   -->
	<context:component-scan base-package="com">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	<!-- 注册拦截器 -->
	<mvc:interceptors>
<!--		 权限检查拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/admin/checkLogin.do" />
			<mvc:exclude-mapping path="/admin/login.do" />
			<mvc:exclude-mapping path="/admin/creatKey.do" />
			<mvc:exclude-mapping path="/admin/loginOut.do" />
			<mvc:exclude-mapping path="/admin/getLoginInfo.do" />
			<mvc:exclude-mapping path="/admin/updPsd.do" />
			<mvc:exclude-mapping path="/admin/getAllRole.do" />
			<mvc:exclude-mapping path="/admin/getAdminById.do" />
			<mvc:exclude-mapping path="/admin/getAdmin.do" />
			<mvc:exclude-mapping path="/admin/getLoginInfo.do" />
			<mvc:exclude-mapping path="/grouporder/getOrdersByGroupOrderId.do" />
			<mvc:exclude-mapping path="/grouporder/loadCount.do" />
			<mvc:exclude-mapping path="/module/getTopModules.do" />
			<mvc:exclude-mapping path="/skuc/getInfo.do" />
			<mvc:exclude-mapping path="/skuc/addAttr.do" />
			<mvc:exclude-mapping path="/skuc/delAtt.do" />
				<mvc:exclude-mapping path="/skuc/delAttr.do" />
			<mvc:exclude-mapping path="/skuc/getProduct.do" />
			<mvc:exclude-mapping path="/smalltype/getSmallTypeById.do" />
			<mvc:exclude-mapping path="/smalltype/getAllType.do" />
	        <mvc:exclude-mapping path="/smalltype/getSmallTypeByBigTypeId.do" />
			<mvc:exclude-mapping path="/ticket/getTicketsByUserId.do" />
			<mvc:exclude-mapping path="/withdraw/changeStatus.do" />
			<mvc:exclude-mapping path="/grouporder/updateGroupOrder.do" />
			<mvc:exclude-mapping path="/menu/getMenu.do" />
			<mvc:exclude-mapping path="/standard/getAllStandard.do" />
			<mvc:exclude-mapping path="/product/getProductById.do" />
			<mvc:exclude-mapping path="/integral_product/getProductById.do" />
			<mvc:exclude-mapping path="/integralOrder/getIntegralOrderById.do" />
				<mvc:exclude-mapping path="/integralOrder/updateIntegralOrder.do" />
			<bean class="com.dq.interceptor.CheckModuleInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	<!--对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 如果使用jstl的话，配置下面的属性 -->
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
	</bean>

	<!-- 启动触发器的配置开始 -->
	<bean name="startQuertz" lazy-init="false" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="myJobTrigger" />
			</list>
		</property>
	</bean>

	<bean id="myJobTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="myJobDetail" />
		</property>
		<property name="cronExpression">
<!--			<VALUE>0 0 0/6 * * ?</VALUE>-->
			 <value>0 0 0 * * ?</value> 
		</property>
	</bean>

	<!-- job的配置开始 -->
	<bean id="myJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="myJob" />
		</property>
		<property name="targetMethod">
			<value>work</value>
		</property>
	</bean>
	<!-- job的配置结束 -->

	<!-- 工作的bean -->
	<bean id="myJob" class="com.dq.quartz.DS"></bean>
	<!-- 自定义Realm -->
	<bean id="myRealm" class="com.dq.realm.MyRealm"/>  
	
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
  	  <property name="realm" ref="myRealm"/>  
	</bean>  
	
	<!-- Shiro过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
	    <!-- Shiro的核心安全接口,这个属性是必须的 -->  
	    <property name="securityManager" ref="securityManager"/>
	    <!-- 身份认证失败，则跳转到登录页面的配置 -->  
	    <property name="loginUrl" value="../login.html"/>
	    <!-- 权限认证失败，则跳转到指定页面 -->  
	    <property name="unauthorizedUrl" value="../authenticationError.html"/>  
	</bean>  
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->  
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  
	<!-- 开启Shiro注解 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>  
  		<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
  	  <property name="securityManager" ref="securityManager"/>  
    </bean>  
</beans>  